name: CI Tests

on:
  push:
    branches:
      - develop
  pull_request:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-phpcs:
    name: Run PHPCS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ "8.1", "8.2", "8.3" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: ci-setup
        uses: ./.github/actions/ci-setup
        with:
          extensions: 'curl'
          extensions-cache-key: run-phpcs-${{ matrix.php-version }}
          php-version: ${{ matrix.php-version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tools: 'composer, cs2pr, phpcs'

      - name: Run PHPCS
        continue-on-error: false
        id: phpcs
        run: composer phpcs
        env:
          CHANGED_FILES: ${{ steps.ci-setup.outputs.files }}
          PHP_VERSION: ${{ matrix.php-version }}

      - name: Show PHPCS results in PR
        if: ${{ always() && steps.phpcs.outcome == 'failure' }}
        run: cs2pr ./phpcs-report.xml

  run-phpmd:
    name: Run PHPMD
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        php-version: [ "8.1", "8.2", "8.3" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: ci-setup
        uses: ./.github/actions/ci-setup
        with:
          extensions: 'curl'
          extensions-cache-key: run-phpunit-${{ matrix.php-version }}
          php-version: ${{ matrix.php-version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tools: 'composer, phpmd'

      - name: Run PHPMD
        continue-on-error: true
        id: phpmd
        run: composer phpmd
        env:
          CHANGED_FILES: ${{ steps.ci-setup.outputs.files }}

  run-phpunit:
    name: Run PHPUnit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ "8.1", "8.2", "8.3" ]
        coverage: [ true ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: ci-setup
        uses: ./.github/actions/ci-setup
        with:
          extensions: 'curl, mysql, mysqli, tar, zip'
          extensions-cache-key: run-phpunit-${{ matrix.php-version }}
          php-version: ${{ matrix.php-version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tools: 'composer, phpunit'

      - name: Run PHPUnit
        continue-on-error: false
        id: phpunit
        run: composer phpunit
        env:
          CHANGED_FILES: ${{ steps.ci-setup.outputs.files }}

      - name: Upload coverage to Codecov
        if: ${{ github.event_name == 'pull_request' }}
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false

  run-phpstan:
    name: Run PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ "8.1", "8.2", "8.3" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: ci-setup
        uses: ./.github/actions/ci-setup
        with:
          extensions: 'curl'
          extensions-cache-key: run-phpunit-${{ matrix.php-version }}
          php-version: ${{ matrix.php-version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tools: 'composer, phpstan'

      - name: Run PHPStan
        continue-on-error: true
        id: phpstan
        run: composer phpstan
        env:
          CHANGED_FILES: ${{ steps.ci-setup.outputs.files }}
